import Head from 'next/head'
import {GetStaticProps} from 'next'
import {ParsedUrlQuery} from 'querystring'
import {Grupo} from '@/types/Grupo'
import {Produto} from '@/types/Produto'
import {api, getToken, setNormalText} from '@/pages/_app'
import {Header} from '@/components/Theme/Header/Header'
import {Footer} from '@/components/Theme/Footer/Footer'

export const getStaticPaths = async () => {
	const token: string = await getToken()
	const grupos: Grupo[] = await api('/grupos', token)
	const paths: object[] = []
	
	grupos.map(grupo => (
		grupo.subgrupos.map(subgrupo => (
			paths.push({
				params: {
					grupo: grupo.slug.toString(),
					subgrupo: subgrupo.slug.toString()
				}
			})
		))
	))
	
	return {paths, fallback: false}
}

interface Params extends ParsedUrlQuery {
	grupo: string;
	subgrupo: string;
}

export const getStaticProps: GetStaticProps = async (context) => {
	
	let token: string = await getToken()
	let grupos: Grupo[] = await api('/grupos', token)
	
	let {grupo} = context.params as Params
	let {subgrupo} = context.params as Params
	
	let produtos = await api(`/produtos/${grupo}/${subgrupo}`, token)
	
	let titulo = 'Meu Titulo'
	
	grupos.map((item) => {
		if (item.slug === grupo) {
			titulo = setNormalText(item.nome)
		}
	})
	
	return {
		props: {grupos, produtos, titulo},
		revalidate: 60
	}
}

type Props = {
	grupos: Grupo[],
	produtos: Produto[],
	titulo: string
}

export default function subgrupo({grupos, produtos, titulo}: Props) {
	return (
		<>
			<Head>
				<title>Grupo</title>
				<meta name="description" content="Generated by create next app"/>
			</Head>
			<main>
				<Header grupos={grupos}/>
				<h1>Grupo: {titulo}</h1>
				{produtos.map((produto, key) => (
					<div key={key}>
						{produto.nome}
					</div>
				))}
				<Footer grupos={grupos}/>
			</main>
		</>
	)
}
